generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Profile {
  id           Int            @id @default(autoincrement())
  name         String
  story        String?        @db.Text
  photo        String?
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime?      @updatedAt @map("updated_at")
  ProfileTag   ProfileTag[]
  ProfileLink  ProfileLink[]
  ProfileAsset ProfileAsset[]
  ProfileRoute ProfileRoute[]

  @@map("profiles")
}


model Tag {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  createdAt  DateTime     @default(now()) @map("created_at")
  updatedAt  DateTime?    @updatedAt @map("updated_at")
  ProfileTag ProfileTag[]

  @@map("tags")
}

model ProfileTag {
  id        Int       @id @default(autoincrement())
  profile   Profile   @relation(fields: [profileId], references: [id])
  profileId Int       @map("profile_id")
  tag       Tag       @relation(fields: [tagId], references: [id])
  tagId     Int       @map("tag_id")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("profile_tags")
}

model AssetType {
  id           Int            @id @default(autoincrement())
  type         String
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime?      @updatedAt @map("updated_at")
  ProfileAsset ProfileAsset[]

  @@map("asset_types")
}

model ProfileAsset {
  id        Int       @id @default(autoincrement())
  url       String
  profileId Int       @map("profile_id")
  profile   Profile   @relation(fields: [profileId], references: [id])
  typeId    Int       @map("type_id")
  type      AssetType @relation(fields: [typeId], references: [id])
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("profile_assets")
}

model ProfileRoute {
  id          Int       @id @default(autoincrement())
  location    String
  latitude    String
  longitude   String
  orderNumber Int       @map("order_number")
  profile     Profile   @relation(fields: [profileId], references: [id])
  profileId   Int       @map("profile_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")

  @@map("profile_routes")
}

model ProfileLink {
  id        Int       @id @default(autoincrement())
  url       String
  title     String
  profileId Int       @map("profile_id")
  profile   Profile   @relation(fields: [profileId], references: [id])
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("profile_links")
}